---
hyperparams: 
  population_size: 250
  offspring_size: 250
  k: 15 #k of the k-nn in archive-based novelty estimation. Robust value from Gomes' paper is ~15
  num_generations: 1000
novelty_estimator:
  type: "archive_based" 
archive:
  type : "list_based" 
  growth_rate: 10
  growth_strategy: "random" # choices are "most_novel", "random"
  removal_strategy: "random" #choices are "random", "optimal"
  max_size: 6000
  save_to_file: 0 # for this problem only 0 is accepted
mutator:
  type: "poly_same" # types are "poly_same" , "gaussian",  "gaussian_adaptative" and "poly_adaptative". "same" indicates that all weights are mutated according to the same params
  gaussian_params: {"mu": 0.0, "sigma": 0.2, "indpb": 0.8} #Gomes' paper recommends low mutation rates (indpb)
  poly_params: {"eta": 10.0, "low": -1.0, "up": 1.0, "indpb": 0.1} #values used in diversity algorithms repo
selector:
  type: "nsga2"
problem:
  name: "metaworld-ml1" 
  env_conf: ["hammer-v2", "train"] #see metaworld.ML1.ENV_NAMES for the first argument, the second can either be "train" or "eval"
  bd_type: "type_3" #choices are type_i with i in {0,1,2,3}, see MetaWorldProblems.py. The best choice for most tasks is type_4, as it relies on the end position of the manipulated object.
  max_steps: -1 #dicated by ml1
  assets: {}
population:
  individual_type: "simple_fw_fc" 
use_scoop: 1 #when set to 1, run the script with -mi scoop script.py config
visualise_bds: 1 # 0 disable, 1 to logfile, 2 display
ns_log_root: "/tmp/" #directory where NS will create a log directory based on its main pid
save_checkpoints: 0 # 0 don't save, k save every k generations
stop_when_task_solved: 1 #
compute_parent_child_stats: 0 # 0 or 1
disable_tqdm: 0 # 0 or 1, you might want to disable it if you're using nohup

  







